how the linux command works
	(you enter the operation to be carried out)(and then where to do)
	(case sensitive)

clear	(clear the terminal window.)

tools for movement on a tree
pwd	(to see your current location on tree.)
cd name	(change directory to folder named as name.)
cd .. 	(chane directory to up one.)
ls	(list the items of current directory.)
ls /	(list items of the root directory.)
ls ..   (to see the item up one.)

how to create directories and files in them, also never use space in name.
touch file1/file.txt	(will create an empty text file.)
mkdir master	(creating a directory called master at current location.)
rmdir master	(removing a empty directory called master at current location.)
rmdir -r master	(removing a un-empty directory called master at current location.)

mkdir ../master (creating a empty directory called master at one up location from present one.)
rmdir ../master (removing a directory called master at one up location from present one.)
rmdir -r ../master (removing a un-empty directory called master at one up location from present one.)
nano	(is used when you have to work with a file.)
nano masterfile.txt	(will open a file if not present then will help creating a text file with file extention .txt similar for other extentions.)


ctrl o	(helps to save your file.)
ctrl x  (come out of a file.)
cat dirName/name.txt (catalog allows to read the file named name.txt in dirNane directory.)

mv presentDir/file1 destinationDir/file1	(move file1 from present location to mentioned location.)
mv presentDir/file1 destinationDir/file		(move file1 from present location to mentioned location and rename it to file as well.)
mv presentDir/file*.txt ../file2		(move all the files starting with name file to folder file2.)
mv *.txt ../file2				(move all files with extention .txt to folder file2.)
mv file1/*.*/file2				(move all extention files from file1 to file2.)

cp presentDir/file1 destinationDir/file		(copy file1 from present location to mentioned location.)

nano ../file1/prog.py				(creating a prog.py file in existing file1 directory.)

python ../file1/prog.py				(calling python and loading prog file from file file1.)

ls file1>file2/file.txt		(list the data of the file1 and write the output to file.txt in file2 but new data here will overwrite the older one.)
ls file1>>file2/file.txt	(list the data of the file1 and write the output to file.txt in file 2 here the new data will be appended to the file.)
sort file1/file.txt		(sort data present in the file.txt in assending order for alphabets.)
sort -r file1/file.txt		(sort data present in the file.txt in decending orderfor alphabets.)
sort -n file1/file.txt		(sort data present in the file.txt in assending order for numbers.)
sort -n -r file1/file.txt	(sort data present in the file.txt in decending order for numbers.)
sort -M file1/file.txt		(sort data present in the file.txt in assending order for month.)
sort -M -r file1/file.txt	(sort data present in the file.txt in decending order for month.)

sudo halt			(shut down your raspberry pi.)
sudo reboot			(simply reboot your pi ie off then on automatically.)
sudo shutdown -h now		(this will hault everything and then do shutdown.)
sudo shutdown -h now -r         (this will hault everything shutdown then reboot.)

ls /	(takes you to root directory.)
chmod yyy file1		(change the file permission, -/d rwx rwx rwx (r=4,=2,=1) y=r+w+x.)
chmod yyy -R file1		(change the file permission completely , -/d rwx rwx rwx (r=4,=2,=1) y=r+w+x.)
ls ~	(abriviation of /home/pi, directly takes into /home/pi and is very usefull when nevigating from root as using this will avoid use of whole path before file name.)
ls .	(inside the current working folder.)
ls ..   (will list you one directory up.)
ls -a	(shows all hidden files.)
ls />file.txt   (list and send the output to the)
ls / |tee file.txt	(list and put output on file and scree as well, send output to multiple commands.)
ls / |tee command	(list and put output on screen and the command specified, send output to multiple commands.)
ls / |tee file.txt -a	(list and put output on file and scree as well -a will all to apend in the previous created file with same name, send output to multiple commands.)

(|)	(pipe is a powerful command which allows you to play with the output flow of commands, we can pipe output of one command to another command.)

find . -name "file1"	(find command, will find the file1 by its name from the current directory.)
find . -name "*.txt"    (find all the text files from the current directory as we used dot same could be done with the other file extentions.) 
find ~ -name "*.txt"    (find all the files of text time from the current directory.)
find ~ -name "*"	(find all the files from the root directory.)
find / -name "*"	(find all files on the sd card from the root directory.)
sudo find / -name "*"	(find command with super user privilages.)
sudo find . -name "word"	(find a word used in file names. )

grep word file1/file1.txt	(search word in folder file1 in file1.txt.)
grep -r word ~	(search word in home directory.)                  
grep -r word .	(search word in current directory.)
grep -r word ..	(search word in one up directory.)
grep -r -i word ~ .	(search word in home directory for word and ignore case sensitiveness.)
sudo grep -r word /	(search word with super user command.)
	(search in the files.)

sudo 	(super user)

fconfig	(finding the ip address of the device.)

ctrl+c (exit.)		



cd /home	(to check the no of users available eg pi.)
sudo useradd DaddyPanther -m -s /bin/bash -g users (defalt, you can see the files of other users but cannot change them, but can coppy files to its user account.)
sudo passwd DaddyPanther
userdel DaddyPanther	(to delete the user.)
sudo userdel 	(delete with super user writes)
logout	(logout)
sudo -r userdel user1 (delete user named user1 and also delete its folders -r helps to do so.)


																						
